    const addToCart = (productItem : ProductModel) => {

        console.log(`Add to Cart...`);
        const matchingProduct = cart.cartItemsModel.find( (cartItemModel) => (
            cartItemModel.product.id === productItem.id
        ));    
    
        if (matchingProduct){
    
          const updatedCartItems  = cart.cartItemsModel.map((cartItem) => {
    
              if (cartItem.product.id === productItem.id){
    
                const updatedCartItem = {
                  product : cartItem.product,
                  quantity: cartItem.quantity + 1
                }
    
                return updatedCartItem;
              }else{
    
                const newCartItem = {
                  product: cartItem.product,
                  quantity: cartItem.quantity
                }
    
                return newCartItem;
              }
            });
    
            const updatedCart : CartModel = {
                cartItemsModel: updatedCartItems
            } 
    
          setCart(updatedCart);
        }else{
    
          const newCartItem = {
            product: productItem, quantity: 1
          }
          
          const updatedCartItems = 
            [... cart.cartItemsModel, newCartItem ];
    
          const updatedCart : CartModel = {
            cartItemsModel : updatedCartItems
          }
    
          setCart(updatedCart);
        }    
    }


    const removeFromCart = (productItem : ProductModel) => {

        const updatedCartItems : CartItemModel[] = [];
        
          cart.cartItemsModel.forEach((cartItem) => {
    
            if (cartItem.product.id  === productItem.id){
    
              if (cartItem.quantity === 1){
                // If Quantity is 1, then 'remove' wil make as 0
                // So no need to add/copy it
              }else{
    
                let updatedCartItem : CartItemModel = {
                  product: cartItem.product,
                  quantity: cartItem.quantity - 1
                }             
                updatedCartItems.push(updatedCartItem);
              }
            }else{
              updatedCartItems.push(cartItem);
            }
          })
    
          const updatedCart : CartModel = {
            cartItemsModel: updatedCartItems
          }
    
          setCart(updatedCart);    
    }     
